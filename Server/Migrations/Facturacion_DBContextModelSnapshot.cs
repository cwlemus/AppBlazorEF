// <auto-generated />
using System;
using AppBlazorEF.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppBlazorEF.Server.Migrations
{
    [DbContext(typeof(Facturacion_DBContext))]
    partial class Facturacion_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppBlazorEF.Server.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnName("ID_CLIENTE")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnName("APELLIDO")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Telefono")
                        .HasColumnName("TELEFONO")
                        .HasColumnType("varchar(9)")
                        .HasMaxLength(9)
                        .IsUnicode(false);

                    b.HasKey("IdCliente");

                    b.ToTable("CLIENTE");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.DetFactura", b =>
                {
                    b.Property<int>("IdDetFactura")
                        .HasColumnName("ID_DET_FACTURA")
                        .HasColumnType("int");

                    b.Property<int?>("Cantidad")
                        .HasColumnName("CANTIDAD")
                        .HasColumnType("int");

                    b.Property<int?>("IdEncFactura")
                        .HasColumnName("ID_ENC_FACTURA")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnName("ID_PRODUCTO")
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .HasColumnName("TOTAL")
                        .HasColumnType("float");

                    b.HasKey("IdDetFactura");

                    b.HasIndex("IdProducto");

                    b.ToTable("DET_FACTURA");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.EncFactura", b =>
                {
                    b.Property<int>("IdFactura")
                        .HasColumnName("ID_FACTURA")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnName("FECHA")
                        .HasColumnType("date");

                    b.Property<string>("FormaPago")
                        .HasColumnName("FORMA_PAGO")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("IdCliente")
                        .HasColumnName("ID_CLIENTE")
                        .HasColumnType("int");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdCliente");

                    b.ToTable("ENC_FACTURA");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Usuario")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MENU");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.Menuitem", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Accion")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Controlador")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("IdPadre")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MENUITEM");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO")
                        .HasColumnType("int");

                    b.Property<double?>("Precio")
                        .HasColumnName("PRECIO")
                        .HasColumnType("float");

                    b.Property<string>("Producto1")
                        .HasColumnName("PRODUCTO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("IdProducto");

                    b.ToTable("PRODUCTO");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .HasColumnName("ID_PROVEEDOR")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnName("APELLIDO")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdProveedor");

                    b.ToTable("PROVEEDOR");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.DetFactura", b =>
                {
                    b.HasOne("AppBlazorEF.Server.Models.EncFactura", "IdProductoNavigation")
                        .WithMany("DetFactura")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_DET_FACTURA_ENC_FACTURA");

                    b.HasOne("AppBlazorEF.Server.Models.Producto", "IdProducto1")
                        .WithMany("DetFactura")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_DET_FACTURA_PRODUCTO");
                });

            modelBuilder.Entity("AppBlazorEF.Server.Models.EncFactura", b =>
                {
                    b.HasOne("AppBlazorEF.Server.Models.Cliente", "IdClienteNavigation")
                        .WithMany("EncFactura")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_ENC_FACTURA_CLIENTE");
                });
#pragma warning restore 612, 618
        }
    }
}
